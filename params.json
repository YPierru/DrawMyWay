{"name":"DrawMyWay","tagline":"Application androïd - Projet de fin d'année Licence informatique","body":"## Hello world\r\nBienvenue sur la page du projet DrawMyWay. Vous trouverez ici toutes les informations relatives à DrawMyWay (descriptif, avancement etc).\r\n\r\n### Les Pro-GramMeurs\r\nNous sommes 3 étudiants en informatique : Axel, Jérémy et Yan. Cette application constitue notre projet de fin d'année de L3 informatique.\r\n\r\n### Présentation\r\nDrawMyWay est une application androïd, destinée aussi bien aux coureurs à pied qu'aux automobilistes. DrawMyWay vous permet de tracer vous-même vos trajets sur une carte, l'application vous guidera à la manière d'un GPS. Vous pouvez choisir de créer un trajet entre 2 points, ou entre une série de points. L'accent est mis sur la simplicité d'utilisation et l'efficacité.\r\n\r\n### Technologies utilisées... et pourquoi\r\n* **Androïd** pour sa facilité d'approche étant donné que nous connaissions déjà le Java.\r\n* **Google Map**, bien qu'il existe d'autres systèmes de cartographie (IGN, OpenStreetMap...) Google Map était le seul combinant plusieurs avantages : gratuité, précision, grosse communauté de développeurs, beaucoup de doc/tutoriels, beaucoup de retours.\r\n* **Google Directions API**, liée à Google Map, permet de récupérer des instructions de déplacements entre 2 points donnés.\r\n* **ActionBarSherlock**, librairie utilisée pour tous les éléments graphiques. C'est une solution temporaire car les développements évolutifs ont été stoppés. A terme une migration est prévue vers ActionBarCompat, l'API Google.\r\n* **Commons-io**, librairie créée par Apache, permettant de gérer les entrées/sorties.\r\n* **Gson**, librairie Google, permettant de parser un fichier JSON vers une structure Java.\r\n* **Joda-time**, librairie permettant de manipuler, plus facilement qu'en java natif, les dates et heures.\r\n* **JSoup**, librairie permettant de parser du contenu HTML. Elle est utilisée pour supprimer les balises HTML d'une chaine de caractères.\r\n* **Simple-side-drawer**, librairie permettant d'afficher des panneaux latéraux dans nos écrans. C'est la librairie la plus simple à utiliser que nous ayons trouvé.\r\n\r\n\r\n## Avancement\r\n### Fait\r\n* Avoir une carte (GoogleMap) à l'écran.\r\n* Modifier à sa guise le type de la carte (normal, terrain, satellite, hybride).\r\n* Pouvoir dessiner un trajet (départ/arrivé, jalons intermédiaire et validation).\r\n* Sauvegarder un trajet.\r\n* Avoir un GPS purement textuel, reprenant les informations de directions du trajet.\r\n* Afficher la liste des trajets sauvegardés.\r\n* Supprimer un trajet sauvegardé.\r\n* Modifier le nom d'un trajet sauvegardé.\r\n* Afficher les détails d'un trajet (kilométrage, temps prévu, date de création/modification etc).\r\n* Permettre de modifier un trajet en déplaçant des jalons, les supprimant etc (correction mode).\r\n\r\n### En cours\r\n* Permettre de rechercher un lieu avec une auto-complétion.\r\n* Modifications ergonomiques par rapport à l'interface utilisateur.\r\n\r\n### A Faire\r\n* Avoir un GPS graphique, avec prise en compte de la position de l'utilisateur et de ses déplacements\r\n* Avoir un GPS vocal à partir des données recueillies à la validation d'un trajet\r\n* Mieux gérer la validation d'un trajet (Thread)\r\n* Tester sur différents appareils (taille d'écran et version d'Androïd)\r\n* Dessin d'icônes, embellissement graphique\r\n\r\n## Arborescence du repo\r\n### APK\r\nCe dossier contient le .apk de l'application. Pour l'installer sur votre terminal android : \r\n* Etre en version 4.0 ou ultérieur\r\n* Connectez votre terminal à votre ordinateur\r\n* Déposer le .apk dans votre terminal (à la racine par exemple)\r\n* Sur votre terminal, à l'aide d'un file manager, naviguez jusqu'au .apk\r\n* Tapez dessus et confirmez que vous voulez bien installer l'application\r\n\r\n### Documents\r\n**Fiches fonctionnelles**\r\nCes documents, en format word ou excel, sont liés à la gestion et l'organisation du projet. On y retrouvera : \r\n* 01_PresentationGenerale : Bref descriptif de l'application, la finalité, l'évolutivité\r\n* 02_DescFonctionnalites : Présente en détails les fonctionnalités de l'application, et comment y accéder.\r\n* 03_LogiqueEcrans : Descriptif détaillé des écrans : comment y accéder, quelles actions sont disponible sur chacun d'entre eux etc.\r\n* 04_TechnoUtilisees : Explique les choix qui ont été faits concernant les technologiques utilisées : pourquoi Androïd ? Pourquoi Google Maps ? Pourquoi telle librairie ?\r\n* 05_RepartitionTaches : Répartition des tâches entre Jérémy, Axel et Yan\r\n* 06a_FicheRisques : Détaille les risques que l'on pourrait rencontrer durant le projet\r\n* 06b_FicheRisques : idem que ci-dessus, mais avec l'historique des risques déjà rencontrés.\r\n\r\n**MSProject**\r\nContient le fichier .mpp. Ce fichier est importable sous Microsoft Project. Il montre le Gantt et le WBS du projet, ainsi que la charge et l'attribution des tâches précises.\r\n\r\n**Tests**\r\nContient le fichier Excel décrivant les tests faits/à faire et leurs résultats.","google":"DrawMyWay","note":"Don't delete this file! It's used internally to help with page regeneration."}